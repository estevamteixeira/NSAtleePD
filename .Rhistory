# scale_x_date(date_breaks = "2 years",
#              date_labels = "%Y") +
scale_x_continuous(#trans = 'log2',
breaks = pretty) +
scale_y_continuous(#trans = 'log2',
breaks = pretty,
labels = scales::percent_format(accuracy = 1),
limits = c(0, NA)) +
labs(y = '% of deliveries', x = '') +
theme_minimal()
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
)) %>%
plotly::layout(legend = list(orientation = "h", y = -0.25, x = 0.5,
xanchor = "center"),
font = list(face = "bold", size = 10))
plot
pal <- c(#"No" = "#1b9e77",
"Cannabis" = "#d95f02")
plot <- ggplot(data = dta1[marij %in% "Cannabis"],
aes(x = BrthYear,
y = rate,
group = marij,
color= marij,
#shape = marij,
fill = marij,
text =paste(marij,
"<br>Year:", BrthYear,
"<br># births:", scales::comma(total, accuracy = 1),
"<br>% of deliveries:" , scales::percent(rate, accuracy = .1)
)
)
) +
geom_point(aes(color = marij, fill = marij),
show.legend = FALSE) +
geom_line(aes(color = marij, fill = marij),
alpha = 0.65,
show.legend = FALSE) +
# Specifying colors by age group
scale_color_manual(name = "",
values = pal,
limits = names(pal)) +
scale_fill_manual(name = "",
values = pal,
limits = names(pal)) +
# scale_shape_manual(name = "",
#                    values = c(15, 16, 17)) +
# scale_x_date(date_breaks = "2 years",
#              date_labels = "%Y") +
scale_x_continuous(#trans = 'log2',
breaks = pretty) +
scale_y_continuous(#trans = 'log2',
breaks = pretty,
labels = scales::percent_format(accuracy = 1),
limits = c(0, NA)) +
labs(y = '% of deliveries', x = '') +
theme_minimal()
plot
pal <- c(#"No" = "#1b9e77",
"Cannabis" = "#d95f02")
plot <- ggplot(data = dta1[!marij %in% "No"],
aes(x = BrthYear,
y = rate,
group = marij,
color= marij,
#shape = marij,
fill = marij,
text =paste(marij,
"<br>Year:", BrthYear,
"<br># births:", scales::comma(total, accuracy = 1),
"<br>% of deliveries:" , scales::percent(rate, accuracy = .1)
)
)
) +
geom_point(aes(color = marij, fill = marij),
show.legend = FALSE) +
geom_line(aes(color = marij, fill = marij),
alpha = 0.65,
show.legend = FALSE) +
# Specifying colors by age group
scale_color_manual(name = "",
values = pal,
limits = names(pal)) +
scale_fill_manual(name = "",
values = pal,
limits = names(pal)) +
# scale_shape_manual(name = "",
#                    values = c(15, 16, 17)) +
# scale_x_date(date_breaks = "2 years",
#              date_labels = "%Y") +
scale_x_continuous(#trans = 'log2',
breaks = pretty) +
scale_y_continuous(#trans = 'log2',
breaks = pretty,
labels = scales::percent_format(accuracy = 1),
limits = c(0, NA)) +
labs(y = '% of deliveries', x = '') +
theme_minimal()
plot
dta1 <- dta[, .(BrthYear,
R005_00900)] %>%
.[, `:=` (marij = fcase(
R005_00900 >= 1, 1,
default = 0
))] %>%
.[, `:=` (count = .N), by = list(BrthYear, marij)] %>%
.[, `:=` (total = .N), by = list(BrthYear)] %>%
.[, `:=` (rate = count/total)] %>%
unique()
# smoking change category
dta1 <- dta1[, `:=` (marij = factor(marij,
levels = c(0,1),
labels = c("No",
"Cannabis")))]
pal <- c(#"No" = "#1b9e77",
"Cannabis" = "#d95f02")
pal
plot <- ggplot(data = dta1[!marij %in% "No"],
aes(x = BrthYear,
y = rate,
group = marij,
color= marij,
#shape = marij,
fill = marij,
text =paste(marij,
"<br>Year:", BrthYear,
"<br># births:", scales::comma(total, accuracy = 1),
"<br>% of deliveries:" , scales::percent(rate, accuracy = .1)
)
)
) +
geom_point(aes(color = marij, fill = marij),
show.legend = FALSE) +
geom_line(aes(color = marij, fill = marij),
alpha = 0.65,
show.legend = FALSE) +
# Specifying colors by age group
scale_color_manual(name = "",
values = pal,
limits = names(pal)) +
scale_fill_manual(name = "",
values = pal,
limits = names(pal)) +
# scale_shape_manual(name = "",
#                    values = c(15, 16, 17)) +
# scale_x_date(date_breaks = "2 years",
#              date_labels = "%Y") +
scale_x_continuous(#trans = 'log2',
breaks = pretty) +
scale_y_continuous(#trans = 'log2',
breaks = pretty,
labels = scales::percent_format(accuracy = 1),
limits = c(0, NA)) +
labs(y = '% of deliveries', x = '') +
theme_minimal()
plot
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
)) %>%
plotly::layout(legend = list(orientation = "h", y = -0.25, x = 0.5,
xanchor = "center"),
font = list(face = "bold", size = 10))
plot
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
)) %>%
plotly::layout(legend = list(orientation = "h", y = -0.25, x = 0.5,
xanchor = "center"),
font = list(face = "bold", size = 10))
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
))
plot <- ggplot(data = dta1[!marij %in% "No"],
aes(x = BrthYear,
y = rate,
group = marij,
#color= marij,
#shape = marij,
#fill = marij,
text =paste(marij,
"<br>Year:", BrthYear,
"<br># births:", scales::comma(total, accuracy = 1),
"<br>% of deliveries:" , scales::percent(rate, accuracy = .1)
)
)
) +
geom_point(aes(color = marij, fill = marij),
show.legend = FALSE) +
geom_line(aes(color = marij, fill = marij),
alpha = 0.65,
show.legend = FALSE) +
# Specifying colors by age group
scale_color_manual(name = "",
values = pal,
limits = names(pal)) +
scale_fill_manual(name = "",
values = pal,
limits = names(pal)) +
# scale_shape_manual(name = "",
#                    values = c(15, 16, 17)) +
# scale_x_date(date_breaks = "2 years",
#              date_labels = "%Y") +
scale_x_continuous(#trans = 'log2',
breaks = pretty) +
scale_y_continuous(#trans = 'log2',
breaks = pretty,
labels = scales::percent_format(accuracy = 1),
limits = c(0, NA)) +
labs(y = '% of deliveries', x = '') +
theme_minimal()
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
)) %>%
plotly::layout(legend = list(orientation = "h", y = -0.25, x = 0.5,
xanchor = "center"),
font = list(face = "bold", size = 10))
plot <- ggplot(data = dta1[!marij %in% "No"],
aes(x = BrthYear,
y = rate,
#group = marij,
#color= marij,
#shape = marij,
#fill = marij,
text =paste(marij,
"<br>Year:", BrthYear,
"<br># births:", scales::comma(total, accuracy = 1),
"<br>% of deliveries:" , scales::percent(rate, accuracy = .1)
)
)
) +
geom_point(aes(color = marij, fill = marij),
show.legend = FALSE) +
geom_line(aes(color = marij, fill = marij),
alpha = 0.65,
show.legend = FALSE) +
# Specifying colors by age group
scale_color_manual(name = "",
values = pal,
limits = names(pal)) +
scale_fill_manual(name = "",
values = pal,
limits = names(pal)) +
# scale_shape_manual(name = "",
#                    values = c(15, 16, 17)) +
# scale_x_date(date_breaks = "2 years",
#              date_labels = "%Y") +
scale_x_continuous(#trans = 'log2',
breaks = pretty) +
scale_y_continuous(#trans = 'log2',
breaks = pretty,
labels = scales::percent_format(accuracy = 1),
limits = c(0, NA)) +
labs(y = '% of deliveries', x = '') +
theme_minimal()
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
)) %>%
plotly::layout(legend = list(orientation = "h", y = -0.25, x = 0.5,
xanchor = "center"),
font = list(face = "bold", size = 10))
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
)) %>%
plotly::layout(legend = list(orientation = "h", y = -0.25, x = 0.5,
xanchor = "center"),
font = list(face = "bold", size = 10),
showlegend = FALSE)
plot <- ggplot(data = dta1[!marij %in% "No"],
aes(x = BrthYear,
y = rate,
group = marij,
color= marij,
#shape = marij,
fill = marij,
text =paste(marij,
"<br>Year:", BrthYear,
"<br># births:", scales::comma(total, accuracy = 1),
"<br>% of deliveries:" , scales::percent(rate, accuracy = .1)
)
)
) +
geom_point(aes(color = marij, fill = marij),
show.legend = FALSE) +
geom_line(aes(color = marij, fill = marij),
alpha = 0.65,
show.legend = FALSE) +
# Specifying colors by age group
scale_color_manual(name = "",
values = pal,
limits = names(pal)) +
scale_fill_manual(name = "",
values = pal,
limits = names(pal)) +
# scale_shape_manual(name = "",
#                    values = c(15, 16, 17)) +
# scale_x_date(date_breaks = "2 years",
#              date_labels = "%Y") +
scale_x_continuous(#trans = 'log2',
breaks = pretty) +
scale_y_continuous(#trans = 'log2',
breaks = pretty,
labels = scales::percent_format(accuracy = 1),
limits = c(0, NA)) +
labs(y = '% of deliveries', x = '') +
theme_minimal()
plotly::ggplotly(plot, tooltip = c("text")) %>%
plotly::style(hoverlabel = list(
bgcolor  = "black",
bordercolor = "transparent",
font = list(
color = "white",
size = 14,
face = "bold"
)
)) %>%
plotly::layout(legend = list(orientation = "h", y = -0.25, x = 0.5,
xanchor = "center"),
font = list(face = "bold", size = 10),
showlegend = FALSE)
library(haven) # read sas dataset
library(data.table) # most efficient package for large datasets
library(ggplot2)
library(plotly)
library(reactable)
library(scales)
library(knitr)
library(kableExtra)
library(janitor)
monster <- read_sas("H:\\RCP\\RCP_Data\\TeixeiEC\\NSAtleePD\\data\\monster.sas7bdat"#, n_max = 2
)
monster <- setDT(monster)
monster <- monster[BrthYear >= 2005,.(MOTHERID,
CONTCTID,
BTBrthDT, # birth date
BrthYear, # birth year
BTBRTHOR,
BTSEX, # birth phenotypical sex
BTOUTCOM, # birth outcome
ProvNo,
BIRTHWT,
GA_BEST,
DIGESAGE,
DLResDHA,
DIFINOUT,
DMMATAGE, # determinant maternal age
DLPARA, # number of pregnancies delivered
DLMRSTAT, # marital status at delivery
ADMITSMK, # smoking at time of admission
DLVS1SMK, # smoking at first prenatal visit
SMOKE_20, # smoking at 20 weeks
DLPRESMK, # pre-pregnancy smoking
BTBRTHOR, # birth order
DLNUMFET, # number of fetuses delivered
MODEDEL,
APLoS,
PPLoS,
MZ37001,
MZ37101,
MZ37201,
MZ37301,
MZ37501,
MZ37611,
MZ37911,
MZ311,
MZ312,
MZ313,
R005_00900, # Cannabis
R004_00200,
R004_01300,
R004_00700, R004_00710, R004_00720, R004_00730, # OAMT = Opioid Agonist Maintenance Therapy
R005_01000,
R067_01300,
DLHEIGHT,
DLWeight,
DLPrePWt,
PrePBMI,
R014_00700,
R014_00800,
R014_00900,
R014_01000,
R014_01100,
R014_01200,
R014_01300,
R014_01400,
MO10,
MO11,
MO13,
MO14, MO14101, MO14102, MO14201, MO14202, MO14204,
MO15,
MO240,
MO241,
MO242,
MO243,
MO244, MO24401, MO24404, MO24409,
MO245, MO24501, MO24502, MO24504,
MO246, MO24601, MO24602, MO24604,
MO247, MO24701, MO24704,
MO248, MO24801, MO24802, MO24803, MO24804,
MO249,
ME10, ME11, ME13, ME14,
MH360,
MG632,
IP700, IP701,
MI10, MI11, MI12, MI13,
BRSTFDIS,
LABOUR,
FAILED_INDUCTION,
DMINDUCT,
AUGMENT,
R010_00200, R010_00300, R010_00400, R010_00500, R010_01000,
R011_00200, R011_00300, R011_00400, R011_00500, R011_01000,
R012_00200, R012_00300, R012_00400, R012_00500, R012_01000,
MEPIS, MEPIC, MIFUS, MPCEA, MSEDN, MSPIN, MPUDL, MGENA,
R010_00600, R011_00600, R012_00600,
R010_00800, R011_00800, R012_00800,
R010_00900, R011_00900, R012_00900,
DMMETHOD,
INDICCS1,
DMCSSTAG,
DMVBACCA,
POSATDEL,
DLPRVCS,
CDILCS,
R014_00500, R014_00600, R014_00800, R014_01800, R014_01900,
MO44,
MO45,
MO700, MO701,
MO702, MO70201, MO70204, MO70211, MO70214, MO70221, MO70231, MO70234, MO70281, MO70291,
MO703, MO70301, MO70304,
DMEPISIO,
R003_00400, R003_00900, R003_01300, R003_01400, R003_02200,
R027_00400,
R029_00100, R029_00200, R029_00300, R029_00400,
MO72,
M_1KT51,
M_1RM13GQC2, #M_1RM13GQGE,
M_1RM13GQW0,
M_5PC91HR, M_5PC91HT, M_5PC91HU, M_5PC91HV, M_5PC91LA,
RBC,
Wgt4Age,
R082_00100, R082_00200, R082_00300, R082_00400, R082_00500,
IP100, IP101, IP103, IP108,
IP1301, IP132, IP1330, IP134, IP138,
IP140, IP143,
IP220, IP221,
IP23,
IP36,
IP3751,
#IB003,
R084,
R059_00200, R059_00300, R059_00400, R059_00500, R059_00600,
IG00, IG01, IG02, IG020,IG03, IG04, IG05, IG06, IG08,
IA879,
R078_00100,
I_1YZ12JADQ,
Infant_LoS,
R067,
IP961, MF11,
R005_00400, R005_00500, R005_00600, R005_00800, R005_01100, R005_01600,
R067_00900, R067_01000, R067_01200, R067_01400, R067_01700, R067_02100, R067_02200,
R003_02200)]
write.csv(monster, "H:\\RCP\\RCP_Data\\TeixeiEC\\NSAtleePD\\data\\NSAtleePD.csv",
row.names = FALSE)
